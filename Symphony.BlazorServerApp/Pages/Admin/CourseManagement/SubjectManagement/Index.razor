@page "/admin/subject"

@inject ISubjectService subjectService
@using Symphony.BlazorServerApp.Services.SubjectServices
@using Symphony.BlazorServerApp.Controls.TableComponents

<AuthorizeView Roles="admin">
    <Authorized>
        <div class="container-lg">
            <h1 class="text-center fw-bolder">Subjects Manager</h1>
            <CreateButton Url="/admin/subject/create" Who="a New Subject" />
            <TableTemplate Caption="Subjects" Items="Subjects" Context="sub">
                <TableHeader>
                    <td><p>@nameof(Subject.Id)</p></td>
                    <td><p>@nameof(Subject.Name)</p></td>
                    <td><p>@nameof(Subject.Description)</p></td>
                    <td><p>@nameof(Subject.Price)</p></td>
                    <td><p>@nameof(Subject.Duration)</p></td>
                    <td><p>@nameof(Subject.IsShown)</p></td>
                    <td></td>
                </TableHeader>
                <RowTemplate>
                    <td><p>@sub.Id</p></td>
                    <td><p>@sub.Name</p></td>
                    <td><p>@sub.Description</p></td>
                    <td><p>@sub.Price</p></td>
                    <td><p>@sub.Duration</p></td>
                    <td><p>@(sub.IsShown ? "Show" : "Hidden")</p></td>
                    <td class="text-center">
                        <NavLink href=@($"/admin/subject/edit/{sub.Id}") class="material-icons nav-item text-warning me-4">edit</NavLink>
                        <button @onclick="() => DeleteSubject(sub.Id)" class="btn material-icons text-danger me-2">delete</button>
                    </td>
                </RowTemplate>
            </TableTemplate>
        </div>
    </Authorized>
    <NotAuthorized>
        <UnauthorizedAccess />
    </NotAuthorized>
</AuthorizeView>

@code {
    public List<SubjectVM> Subjects { get; set; } = new();
    public SubjectVM Subject { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Subjects = (await subjectService.GetSubjectVMsAsync()).ToList();
    }

    private async Task DeleteSubject(int id)
    {
        if (id != 0) await subjectService.ChangeSubjectState(id);

        StateHasChanged();
    }
}
