@page "/admin/batchManagement/{id:int}"

@using Symphony.BlazorServerApp.Services.BatchServices

@inject IBatchService batchService;

<AuthorizeView Roles="admin" Context="updateBatch">
    <Authorized>
        <div class="container-lg">
            <h1 class="text-center fw-bolder">Batch Manager</h1>
            @if (Batch is null)
            {
                <h3>Loading...</h3>
            }
            else
            {
                <div class="main-content flex">
                    <ul>
                        <li>
                            <span class="fw-bolder pe-2">@nameof(Batch.Id):</span>@Batch.Id
                        </li>
                        <li>
                            <span class="fw-bolder pe-2">@nameof(Batch.Description):</span>@Batch.Description
                        </li>
                        <li>
                            <span class="fw-bolder pe-2">Start Date:</span>@Batch.StartDate.ToShortDateString()
                        </li>
                        <li>
                            <span class="fw-bolder pe-2">End Date:</span>@Batch.EndDate.ToShortDateString()
                        </li>
                        <li>
                            <span class="fw-bolder pe-2">@nameof(Batch.CreatedAt):</span>@Batch.CreatedAt.ToShortDateString()
                        </li>
                    </ul>
                </div>
                <div class="navigator flex">
                    <div>
                        <a href="admin/batchManagement" class="back">
                            Go back to registration manager <span class="ps-3 material-icons">chevron_left</span>
                        </a>
                    </div>
                    <div>
                        <a href="admin/batchManagement/edit/@Batch.Id" class="edit">
                            Go to edit page
                            <span class="ps-3 material-icons">edit</span>
                        </a>
                    </div>
                </div> 
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <UnauthorizedAccess />
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public int Id { get; set; }
    private BatchVM Batch { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Batch = await batchService.GetBatchVMAsync(Id);
    }
}
